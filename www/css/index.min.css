/* PARTIALS */
@font-face {
  font-family: 'RobotoBold';
  src: url("../fonts/Roboto Bold/RobotoBold.eot");
  src: url("../fonts/Roboto Bold/RobotoBold.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto Bold/RobotoBold.woff") format("woff"), url("../fonts/Roboto Bold/RobotoBold.woff2") format("woff2"), url("../fonts/Roboto Bold/RobotoBold.ttf") format("truetype"), url("../fonts/Roboto Bold/RobotoBold.svg") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'RobotoLight';
  src: url("../fonts/Roboto Light/RobotoLight.eot");
  src: url("../fonts/Roboto Light/RobotoLight.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto Light/RobotoLight.woff") format("woff"), url("../fonts/Roboto Light/RobotoLight.woff2") format("woff2"), url("../fonts/Roboto Light/RobotoLight.ttf") format("truetype"), url("../fonts/Roboto Light/RobotoLight.svg") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'RobotoRegular';
  src: url("../fonts/Roboto Reg/RobotoRegular.eot");
  src: url("../fonts/Roboto Reg/RobotoRegular.eot?#iefix") format("embedded-opentype"), url("../fonts/Roboto Reg/RobotoRegular.woff") format("woff"), url("../fonts/Roboto Reg/RobotoRegular.woff2") format("woff2"), url("../fonts/Roboto Reg/RobotoRegular.ttf") format("truetype"), url("../fonts/Roboto Reg/RobotoRegular.svg") format("svg");
  font-weight: normal;
  font-style: normal;
}

.fixed-width-1280 {
  position: relative;
  height: 100%;
  width: 100%;
  max-width: 1280px;
  margin: 0 auto;
}

@-webkit-keyframes preloaderRight {
  from {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  to {
    -webkit-transform: translate3d(calc(-100% + 100vw), 0, 0);
    transform: translate3d(calc(-100% + 100vw), 0, 0);
  }
}

@keyframes preloaderRight {
  from {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  to {
    -webkit-transform: translate3d(calc(-100% + 100vw), 0, 0);
    transform: translate3d(calc(-100% + 100vw), 0, 0);
  }
}

@-webkit-keyframes preloaderLeft {
  from {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  to {
    -webkit-transform: translate3d(calc(100% - 100vw), 0, 0);
    transform: translate3d(calc(100% - 100vw), 0, 0);
  }
}

@keyframes preloaderLeft {
  from {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  to {
    -webkit-transform: translate3d(calc(100% - 100vw), 0, 0);
    transform: translate3d(calc(100% - 100vw), 0, 0);
  }
}

@-webkit-keyframes circleAnimation {
  from {
    opacity: 0.3;
    border-width: 3px;
    -webkit-transform: translate3d(-50%, -44%, 0) scale(0);
    transform: translate3d(-50%, -44%, 0) scale(0);
  }
  to {
    opacity: 0;
    border-width: 1px;
    -webkit-transform: translate3d(-50%, -20%, 0) scale(1);
    transform: translate3d(-50%, -20%, 0) scale(1);
  }
}

@keyframes circleAnimation {
  from {
    opacity: 0.3;
    border-width: 3px;
    -webkit-transform: translate3d(-50%, -44%, 0) scale(0);
    transform: translate3d(-50%, -44%, 0) scale(0);
  }
  to {
    opacity: 0;
    border-width: 1px;
    -webkit-transform: translate3d(-50%, -20%, 0) scale(1);
    transform: translate3d(-50%, -20%, 0) scale(1);
  }
}

.icon-globe {
  width: 1em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-globe_outer {
  width: 1em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_apple {
  width: 0.82em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_arrow {
  width: 1.32em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_cancel {
  width: 1em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_google_paly {
  width: 0.92em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_in {
  width: 1.07em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_insta {
  width: 1em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_logo_vintage {
  width: 0.73em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_menu {
  width: 1.69em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_profile {
  width: 0.93em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-icon_twitter {
  width: 1.23em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-UNIP_Logo_Black {
  width: 2.11em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

.icon-UNIP_Logo_White {
  width: 2.11em;
  height: 1em;
  fill: currentColor;
  stroke: initial;
}

/* LIBS */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0;
}

/**
 * Add the correct display in IE 9-.
 */
article, aside, footer, header, nav, section, figcaption, figure, main {
  display: block;
}

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */
}

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0;
}

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block;
}

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
}

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden;
}

/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**Enable panning and pinch zoom gestures, but disable additional non-standard gestures such as double-tap to zoom. Disabling double-tap to zoom removes the need for browsers to delay the generation of click events when the user taps the screen. */
a, area, button, input, label, select, textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block;
}

/**
 * Add the correct display in IE.
 */
template {
  display: none;
}

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none;
}

/* Reset
   ========================================================================== */
h1, h2, h3, h4, h5, h6, p, blockquote, em, img, i, dl, dt, ol, ul, li, video, canvas {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}

div, input, textarea, select, button,
h1, h2, h3, h4, h5, h6, a, span {
  outline: none;
}

ul, ol {
  list-style-type: none;
}

input[type="submit"],
button {
  cursor: pointer;
}

input[type="submit"]::-moz-focus-inner,
button::-moz-focus-inner {
  padding: 0;
  border: 0;
}

table {
  border-spacing: 0;
  border-collapse: collapse;
  width: 100%;
}

/** to remove the rounded in IOS*/
textarea,
input[type="text"],
input[type="button"],
input[type="submit"] {
  -webkit-appearance: none;
  border-radius: 0;
}

/* perfect-scrollbar v0.7.0 */
.ps {
  -ms-touch-action: auto;
  touch-action: auto;
  overflow: hidden !important;
  -ms-overflow-style: none;
}

@supports (-ms-overflow-style: none) {
  .ps {
    overflow: auto !important;
  }
}

.ps.ps--active-x > .ps__scrollbar-x-rail,
.ps.ps--active-y > .ps__scrollbar-y-rail {
  display: block;
  background-color: transparent;
}

.ps.ps--in-scrolling.ps--x > .ps__scrollbar-x-rail {
  background-color: #eee;
  opacity: 0.9;
}

.ps.ps--in-scrolling.ps--x > .ps__scrollbar-x-rail > .ps__scrollbar-x {
  background-color: #999;
  height: 11px;
}

.ps.ps--in-scrolling.ps--y > .ps__scrollbar-y-rail {
  background-color: #eee;
  opacity: 0.9;
}

.ps.ps--in-scrolling.ps--y > .ps__scrollbar-y-rail > .ps__scrollbar-y {
  background-color: #999;
  width: 11px;
}

.ps > .ps__scrollbar-x-rail {
  display: none;
  position: absolute;
  /* please don't change 'position' */
  opacity: 0;
  transition: background-color .2s linear, opacity .2s linear;
  bottom: 0px;
  /* there must be 'bottom' for ps__scrollbar-x-rail */
  height: 15px;
}

.ps > .ps__scrollbar-x-rail > .ps__scrollbar-x {
  position: absolute;
  /* please don't change 'position' */
  background-color: #aaa;
  border-radius: 6px;
  transition: background-color .2s linear, height .2s linear, width .2s ease-in-out, border-radius .2s ease-in-out;
  bottom: 2px;
  /* there must be 'bottom' for ps__scrollbar-x */
  height: 6px;
}

.ps > .ps__scrollbar-x-rail:hover > .ps__scrollbar-x, .ps > .ps__scrollbar-x-rail:active > .ps__scrollbar-x {
  height: 11px;
}

.ps > .ps__scrollbar-y-rail {
  display: none;
  position: absolute;
  /* please don't change 'position' */
  opacity: 0;
  transition: background-color .2s linear, opacity .2s linear;
  right: 0;
  /* there must be 'right' for ps__scrollbar-y-rail */
  width: 15px;
}

.ps > .ps__scrollbar-y-rail > .ps__scrollbar-y {
  position: absolute;
  /* please don't change 'position' */
  background-color: #aaa;
  border-radius: 6px;
  transition: background-color .2s linear, height .2s linear, width .2s ease-in-out, border-radius .2s ease-in-out;
  right: 2px;
  /* there must be 'right' for ps__scrollbar-y */
  width: 6px;
}

.ps > .ps__scrollbar-y-rail:hover > .ps__scrollbar-y, .ps > .ps__scrollbar-y-rail:active > .ps__scrollbar-y {
  width: 11px;
}

.ps:hover.ps--in-scrolling.ps--x > .ps__scrollbar-x-rail {
  background-color: #eee;
  opacity: 0.9;
}

.ps:hover.ps--in-scrolling.ps--x > .ps__scrollbar-x-rail > .ps__scrollbar-x {
  background-color: #999;
  height: 11px;
}

.ps:hover.ps--in-scrolling.ps--y > .ps__scrollbar-y-rail {
  background-color: #eee;
  opacity: 0.9;
}

.ps:hover.ps--in-scrolling.ps--y > .ps__scrollbar-y-rail > .ps__scrollbar-y {
  background-color: #999;
  width: 11px;
}

.ps:hover > .ps__scrollbar-x-rail,
.ps:hover > .ps__scrollbar-y-rail {
  opacity: 0.6;
}

.ps:hover > .ps__scrollbar-x-rail:hover {
  background-color: #eee;
  opacity: 0.9;
}

.ps:hover > .ps__scrollbar-x-rail:hover > .ps__scrollbar-x {
  background-color: #999;
}

.ps:hover > .ps__scrollbar-y-rail:hover {
  background-color: #eee;
  opacity: 0.9;
}

.ps:hover > .ps__scrollbar-y-rail:hover > .ps__scrollbar-y {
  background-color: #999;
}

.ps__scrollbar-x-rail,
.ps__scrollbar-y-rail {
  display: none !important;
}

.carousel {
  overflow: hidden;
  position: relative;
  width: 100%;
  height: 400px;
  -webkit-perspective: 500px;
  perspective: 500px;
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  -webkit-transform-origin: 0% 50%;
  -ms-transform-origin: 0% 50%;
  transform-origin: 0% 50%;
}

.carousel.carousel-slider {
  top: 0;
  left: 0;
  height: 0;
}

.carousel.carousel-slider .carousel-fixed-item {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 20px;
  z-index: 1;
}

.carousel.carousel-slider .carousel-fixed-item.with-indicators {
  bottom: 68px;
}

.carousel.carousel-slider .carousel-item {
  width: 100%;
  height: 100%;
  min-height: 400px;
  position: absolute;
  top: 0;
  left: 0;
}

.carousel.carousel-slider .carousel-item h2 {
  font-size: 24px;
  font-weight: 500;
  line-height: 32px;
}

.carousel.carousel-slider .carousel-item p {
  font-size: 15px;
}

.carousel .carousel-item {
  display: none;
  width: 200px;
  height: 200px;
  position: absolute;
  top: 0;
  left: 0;
}

.carousel .carousel-item > img {
  width: 100%;
}

.carousel .indicators {
  position: absolute;
  text-align: center;
  left: 0;
  right: 0;
  bottom: 0;
  margin: 0;
}

.carousel .indicators .indicator-item {
  display: inline-block;
  position: relative;
  cursor: pointer;
  height: 8px;
  width: 8px;
  margin: 24px 4px;
  background-color: rgba(255, 255, 255, 0.5);
  transition: background-color .3s;
  border-radius: 50%;
}

.carousel .indicators .indicator-item.active {
  background-color: #fff;
}

.carousel.scrolling .carousel-item .materialboxed,
.carousel .carousel-item:not(.active) .materialboxed {
  pointer-events: none;
}

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent;
}

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0;
}

.slick-list:focus {
  outline: none;
}

.slick-list.dragging {
  cursor: pointer;
  cursor: hand;
}

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
}

.slick-track:before, .slick-track:after {
  content: "";
  display: table;
}

.slick-track:after {
  clear: both;
}

.slick-loading .slick-track {
  visibility: hidden;
}

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none;
}

[dir="rtl"] .slick-slide {
  float: right;
}

.slick-slide img {
  display: block;
}

.slick-slide.slick-loading img {
  display: none;
}

.slick-slide.dragging img {
  pointer-events: none;
}

.slick-initialized .slick-slide {
  display: block;
}

.slick-loading .slick-slide {
  visibility: hidden;
}

.slick-vertical .slick-slide {
  display: block;
  height: auto;
  border: 1px solid transparent;
}

.slick-arrow.slick-hidden {
  display: none;
}

/* COMPONENTS */
html, body {
  width: 100%;
}

body {
  font-family: "RobotoRegular", sans-serif;
  color: #000000;
  background: #ffe60b;
}

body.js-has-preloader {
  overflow: hidden;
}

body.js-has-preloader .preloader {
  display: block;
}

* {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
}

.h1 {
  font-family: "RobotoLight", sans-serif;
  font-size: 110px;
}

.h2 {
  font-family: "RobotoLight", sans-serif;
  font-size: 46px;
  line-height: 55px;
  letter-spacing: 0.2px;
}

.textBlock {
  position: absolute;
  top: 26vh;
  left: 145px;
  padding-top: 13px;
  color: black;
  z-index: 2;
}

.textBlock.js-animation-finished .textBlock__item-small,
.textBlock.js-animation-finished .textBlock__item-big,
.textBlock.js-animation-finished .textBlock__pagination {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.textBlock.js-animation-finished .textBlock__item-big > span:before, .textBlock.js-animation-finished .textBlock__item-big > span:after {
  height: 15px;
}

.textBlock.js-animation-finished .textBlock__item-big > span span {
  width: calc(100% + 20px);
}

.textBlock__item-small {
  font-family: "RobotoRegular", sans-serif;
  font-size: 13px;
  line-height: 21px;
  opacity: 0;
  -webkit-transform: translate3d(0, 50px, 0);
  transform: translate3d(0, 50px, 0);
  transition: all 1s ease;
}

.textBlock__item-big {
  margin-top: 10px;
  opacity: 0;
  -webkit-transform: translate3d(0, 50px, 0);
  transform: translate3d(0, 50px, 0);
  transition: all 1s ease .3s;
}

.textBlock__item-big > span {
  position: relative;
  display: inline-block;
  margin: 0 10px;
}

.textBlock__item-big > span:before, .textBlock__item-big > span:after {
  content: '';
  display: block;
  position: absolute;
  width: 5px;
  height: 0;
  background-color: #fbde0a;
}

.textBlock__item-big > span:before {
  top: 44px;
  left: -5px;
  transition: height .3s ease 1.2s;
}

.textBlock__item-big > span:after {
  bottom: -4px;
  right: -15px;
  transition: height .3s ease 2.1s;
}

.textBlock__item-big > span span {
  position: absolute;
  top: calc(100% + 4px);
  left: -5px;
  width: 0;
  height: 5px;
  background-color: #fbde0a;
  transition: width 0.6s ease 1.5s;
}

.textBlock__pagination {
  margin-top: 25px;
  color: black;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  opacity: 0;
  -webkit-transform: translate3d(0, 50px, 0);
  transform: translate3d(0, 50px, 0);
  transition: all 1s ease .6s;
}

.textBlock__pagination-item {
  position: relative;
  display: inline-block;
  padding-left: 12px;
  cursor: pointer;
}

.textBlock__pagination-item.js-active:before {
  height: 15px;
}

.textBlock__pagination-item:not(:first-child) {
  margin-left: 24px;
}

.textBlock__pagination-item:before {
  content: '';
  display: inline-block;
  position: absolute;
  width: 5px;
  height: 0;
  left: 0;
  bottom: 0;
  background-color: #ffe60b;
  transition: height 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);
}

.btn {
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  color: #010101;
  font-family: "RobotoBold", sans-serif;
  line-height: 16px;
  text-decoration: none;
}

.btn svg {
  fill: #010101;
  transition: fill .5s ease;
}

.btn span {
  transition: color .5s ease;
}

.btn--yellow {
  width: 194px;
  height: 70px;
  background-color: #ffe60b;
  font-size: 16px;
}

.btn--yellow .icon-icon_apple {
  width: 27px;
  height: 32px;
}

.btn--yellow .icon-icon_google_paly {
  width: 26px;
  height: 29px;
}

.btn--yellow span {
  margin-left: 17px;
}

.btn--white {
  width: 167px;
  height: 50px;
  background-color: white;
  font-size: 13px;
}

.btn--white .icon-icon_apple {
  width: 20px;
  height: 23px;
}

.btn--white .icon-icon_google_paly {
  width: 18px;
  height: 20px;
}

.btn--white span {
  margin-left: 14px;
}

.btn:not(:first-child) {
  margin-left: 20px;
}

.preloader {
  display: none;
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 9999;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.preloader.js-animation-finished .preloader__line {
  box-shadow: none;
}

.preloader__line {
  width: 100%;
  height: 25%;
  background: #ffe60b;
  box-shadow: 0 0 84px rgba(166, 74, 0, 0.14);
  transition: box-shadow .4s linear;
  overflow: hidden;
}

.preloader__line-inner {
  height: 100%;
  width: 100%;
  overflow: hidden;
}

.preloader__line .preloader__text.js-animation-finished {
  -webkit-animation: none;
  animation: none;
}

.preloader__line--left .preloader__text {
  float: right;
  -webkit-animation: preloaderLeft 23s infinite linear;
  animation: preloaderLeft 23s infinite linear;
}

.preloader__line--right .preloader__text {
  float: left;
  -webkit-animation: preloaderRight 23s infinite linear;
  animation: preloaderRight 23s infinite linear;
}

.preloader__text {
  display: inline-block;
  margin-top: 1vh;
  opacity: 0.8;
  color: #e1ca04;
  font-family: "RobotoLight", sans-serif;
  font-size: 17.3vh;
  white-space: nowrap;
  line-height: initial;
}

.preloader__text span {
  margin-right: 2vw;
  transition: color .7s linear;
}

.preloader__text span.js-active {
  color: white;
}

.header {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 80px;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 10;
}

.header.js-animation-finished .header__logo, .header.js-animation-finished .header__links, .header.js-animation-finished .header__actions, .header.js-animation-finished .header__burger {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.header.js-background {
  background-color: #fbde0a;
}

.header__inner {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  width: 1280px;
  overflow: hidden;
}

.header__logo {
  width: 119px;
  height: 56px;
  margin-left: 54px;
  margin-top: -5px;
  color: black;
  -webkit-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0);
  transition: -webkit-transform 1.1s ease 0.2s;
  transition: transform 1.1s ease 0.2s;
  transition: transform 1.1s ease 0.2s, -webkit-transform 1.1s ease 0.2s;
}

.header__logo svg {
  width: 100%;
  height: 100%;
}

.header__links {
  -webkit-transform: translate3d(0, -40px, 0);
  transform: translate3d(0, -40px, 0);
  transition: -webkit-transform 1.1s ease 1.4s;
  transition: transform 1.1s ease 1.4s;
  transition: transform 1.1s ease 1.4s, -webkit-transform 1.1s ease 1.4s;
}

.header__links-link {
  color: #000000;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0.3px;
}

.header__actions {
  display: inline-block;
  margin-left: 104px;
  margin-top: -1px;
  color: #000000;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  text-transform: uppercase;
  letter-spacing: 0.3px;
  -webkit-transform: translate3d(0, -41px, 0);
  transform: translate3d(0, -41px, 0);
  transition: -webkit-transform 1.1s ease 0.2s;
  transition: transform 1.1s ease 0.2s;
  transition: transform 1.1s ease 0.2s, -webkit-transform 1.1s ease 0.2s;
}

.header__login {
  display: inline-block;
  cursor: pointer;
  margin-top: -1px;
  color: #000000;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  text-transform: uppercase;
  letter-spacing: 0.3px;
}

.header__login--outer {
  display: none;
}

.header__login span {
  transition: color .5s ease;
  text-transform: uppercase;
}

.header__login svg {
  width: 14px;
  height: 15px;
  display: inline-block;
  margin-left: 18px;
  margin-bottom: -3px;
  stroke: white;
}

.header__languages {
  position: relative;
  display: inline-block;
  height: 14px;
  margin-left: 38px;
  cursor: pointer;
}

.header__languages:hover .js-active {
  color: white;
}

.header__languages:hover .header__languages-inner {
  height: auto;
}

.header__languages:hover .header__languages-item:not(.js-active) {
  opacity: 1;
  visibility: visible;
  transition: color .5s ease, opacity .4s linear, visibility 0s 0s;
}

.header__languages-item {
  display: block;
  color: #000000;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  text-transform: uppercase;
  text-decoration: none;
  padding-right: 17px;
}

.header__languages-inner {
  position: absolute;
  display: inline-block;
  height: 14px;
  left: 0;
  top: 3px;
}

.header__languages-line {
  position: absolute;
  display: inline-block;
  left: 100%;
  top: -1px;
  width: 6px;
  height: 15px;
  background-color: white;
}

.header__burger {
  cursor: pointer;
  -webkit-transform: translate3d(0, -41px, 0);
  transform: translate3d(0, -41px, 0);
  transition: -webkit-transform 1.1s ease 0.2s;
  transition: transform 1.1s ease 0.2s;
  transition: transform 1.1s ease 0.2s, -webkit-transform 1.1s ease 0.2s;
}

.footer {
  width: 100%;
  height: 244px;
  background-color: #f0f0f0;
  overflow: hidden;
}

.footer__logo {
  position: absolute;
  left: 55px;
  top: 69px;
}

.footer__logo svg {
  width: 118px;
  height: 55px;
  cursor: pointer;
}

.footer__logo span {
  display: inline-block;
  width: 100%;
  margin-top: 26px;
  color: #858585;
  font-family: "RobotoRegular", sans-serif;
  font-size: 13px;
}

.footer__social {
  position: absolute;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: flex-end;
  -ms-flex-align: end;
  align-items: flex-end;
  right: 56px;
  top: 68px;
}

.footer__social svg {
  fill: black;
}

.footer__social a:not(:first-child) {
  margin-left: 22px;
}

.footer__social .icon-icon_in {
  width: 16px;
  height: 15px;
}

.footer__social .icon-icon_twitter {
  width: 16px;
  height: 13px;
}

.footer__social .icon-icon_insta {
  width: 14px;
  height: 14px;
}

.footer__center {
  position: absolute;
  left: 304px;
  top: 66px;
}

.footer__links a {
  display: inline-block;
  color: black;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0.8px;
}

.footer__links a:not(:last-child) {
  margin-right: 34px;
}

.footer__buttons {
  margin-top: 39px;
}

.footer__vintage {
  position: absolute;
  right: 56px;
  top: 152px;
  text-decoration: none;
}

.footer__vintage span {
  position: absolute;
  left: -21px;
  top: -4px;
  color: #858585;
  font-family: "RobotoRegular", sans-serif;
  font-size: 13px;
}

.footer__vintage svg {
  width: 11px;
  height: 17px;
  fill: black;
}

.intro {
  position: relative;
  height: 100vh;
  width: 100%;
  overflow: hidden;
}

.intro__background {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.intro__background img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  font-family: "object-fit: cover";
}

.intro__background.js-animation-finished:before {
  opacity: 0.9;
}

.intro__background:before {
  content: '';
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  opacity: 1;
  background-color: #ffe60b;
  transition: opacity 3s linear;
}

.intro__background img {
  width: 100%;
  height: 100%;
}

.intro__title {
  position: absolute;
  left: 260px;
  top: 50%;
  -webkit-transform: translate3d(0, calc(-50% + 10px), 0);
  transform: translate3d(0, calc(-50% + 10px), 0);
  max-width: 875px;
  color: white;
  z-index: 1;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.intro__title.js-animation-finished span {
  -webkit-transform: translateY(0);
  -ms-transform: translateY(0);
  transform: translateY(0);
}

.intro__title div {
  display: block;
  float: left;
  overflow: hidden;
  max-height: 133px;
}

.intro__title div:not(:last-of-type) {
  margin-right: 26px;
}

.intro__title div span {
  display: inline-block;
  -webkit-transform: translateY(100%);
  -ms-transform: translateY(100%);
  transform: translateY(100%);
  transition: -webkit-transform 1.1s ease-in-out;
  transition: transform 1.1s ease-in-out;
  transition: transform 1.1s ease-in-out, -webkit-transform 1.1s ease-in-out;
}

.intro__animation {
  position: absolute;
  width: 10px;
  height: 10px;
  left: 202px;
  top: calc(50% - 45px);
  background: transparent;
}

.intro__animation.js-animation-finished .intro__circle--2 {
  border-width: 3px;
  opacity: 0.3;
  -webkit-transform: translate3d(-50%, -44%, 0) scale(0.15);
  transform: translate3d(-50%, -44%, 0) scale(0.15);
}

.intro__animation.js-animation-finished .intro__circle--3 {
  border-width: 2px;
  opacity: 0.2;
  -webkit-transform: translate3d(-50%, -38%, 0) scale(0.35);
  transform: translate3d(-50%, -38%, 0) scale(0.35);
}

.intro__animation.js-animation-finished .intro__circle--4 {
  border-width: 2px;
  opacity: 0.17;
  -webkit-transform: translate3d(-50%, -32%, 0) scale(0.55);
  transform: translate3d(-50%, -32%, 0) scale(0.55);
}

.intro__animation.js-animation-finished .intro__circle--5 {
  border-width: 1px;
  opacity: 0.09;
  -webkit-transform: translate3d(-50%, -26%, 0) scale(0.75);
  transform: translate3d(-50%, -26%, 0) scale(0.75);
}

.intro__circle {
  position: absolute;
  width: 1700px;
  height: 950px;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  border: 1px solid #857700;
  border-radius: 50%;
  opacity: 0;
  -webkit-transform-origin: center center;
  -ms-transform-origin: center center;
  transform-origin: center center;
  will-change: border-width, opacity;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
}

.intro__circle.js-animation-finished {
  -webkit-animation: circleAnimation 15s linear infinite;
  animation: circleAnimation 15s linear infinite;
}

.intro__pin {
  position: absolute;
  left: -3px;
  top: 59px;
  z-index: 2;
}

.intro__pin.js-animation-finished:before {
  -webkit-transform: scale(1) rotate(45deg);
  -ms-transform: scale(1) rotate(45deg);
  transform: scale(1) rotate(45deg);
}

.intro__pin.js-animation-finished-2:after {
  width: 69px;
}

.intro__pin:before {
  content: '';
  display: block;
  width: 7px;
  height: 7px;
  -webkit-transform: scale(0) rotate(45deg);
  -ms-transform: scale(0) rotate(45deg);
  transform: scale(0) rotate(45deg);
  background-color: #0a0c0a;
  transition: -webkit-transform 1s linear;
  transition: transform 1s linear;
  transition: transform 1s linear, -webkit-transform 1s linear;
}

.intro__pin:after {
  content: '';
  position: absolute;
  left: 23px;
  top: 1px;
  width: 0;
  height: 5px;
  background-color: #0a0c0a;
  transition: width 1s ease;
}

.intro__more {
  position: absolute;
  right: -28px;
  bottom: -17px;
  cursor: pointer;
  -webkit-transform: rotate(-90deg) translate3d(-110px, 0, 0);
  transform: rotate(-90deg) translate3d(-110px, 0, 0);
  -webkit-transform-origin: left top 0;
  -ms-transform-origin: left top 0;
  transform-origin: left top 0;
  transition: -webkit-transform 1s ease;
  transition: transform 1s ease;
  transition: transform 1s ease, -webkit-transform 1s ease;
  z-index: 2;
}

.intro__more.js-animation-finished {
  -webkit-transform: rotate(-90deg) translate3d(0, 0, 0);
  transform: rotate(-90deg) translate3d(0, 0, 0);
}

.intro__more.js-animation-finished .intro__more-text {
  opacity: 1;
}

.intro__more-line {
  position: relative;
  display: inline-block;
  width: 100px;
  height: 5px;
  background-color: transparent;
  overflow: hidden;
}

.intro__more-line span {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: #0a0c0a;
  transition: -webkit-transform .5s ease;
  transition: transform .5s ease;
  transition: transform .5s ease, -webkit-transform .5s ease;
}

.intro__more-text {
  display: inline-block;
  position: absolute;
  left: calc(100% + 19px);
  top: 4px;
  color: black;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  letter-spacing: 1px;
  white-space: nowrap;
  opacity: 0;
  transition: all .6s ease 1s;
}

.slider3d {
  height: 100vh;
  width: 100%;
  background-color: white;
  overflow: hidden;
}

.slider3d .bottomBtn {
  right: auto;
}

.slider3d .textBlock {
  max-width: 280px;
}

.slider3d__container {
  position: absolute;
  height: 640px;
  top: 50%;
  left: 367px;
  -webkit-transform: translate3d(0, calc(-50% + 86px), 0);
  transform: translate3d(0, calc(-50% + 86px), 0);
}

.slider3d__carousel {
  height: 100%;
  width: 545px;
}

.slider3d__carousel:before {
  content: '';
  position: absolute;
  height: 100%;
  width: 125px;
  top: 0;
  left: 0;
  z-index: 2;
  background: linear-gradient(to right, white 0%, white 35%, rgba(255, 255, 255, 0) 100%);
}

.slider3d__carousel:after {
  content: '';
  position: absolute;
  height: 100%;
  width: 125px;
  top: 0;
  right: 0;
  z-index: 2;
  background: linear-gradient(to left, white 0%, white 35%, rgba(255, 255, 255, 0) 100%);
}

.slider3d__carousel.js-animation-finished .carousel-item img {
  opacity: 1;
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.slider3d__carousel .carousel-item {
  width: 295px;
  height: 500px;
  top: -40px;
}

.slider3d__carousel .carousel-item.active img {
  transition: opacity .6s ease, box-shadow .5s ease, -webkit-transform .8s ease;
  transition: transform .8s ease, opacity .6s ease, box-shadow .5s ease;
  transition: transform .8s ease, opacity .6s ease, box-shadow .5s ease, -webkit-transform .8s ease;
}

.slider3d__carousel .carousel-item img {
  width: 100%;
  height: 100%;
  opacity: 0;
  -webkit-transform: translate3d(0, 150px, 0);
  transform: translate3d(0, 150px, 0);
  transition: opacity .6s ease .4s, box-shadow .5s ease, -webkit-transform 1s ease-out .4s;
  transition: transform 1s ease-out .4s, opacity .6s ease .4s, box-shadow .5s ease;
  transition: transform 1s ease-out .4s, opacity .6s ease .4s, box-shadow .5s ease, -webkit-transform 1s ease-out .4s;
}

.slider3d__carousel .carousel-item img.backdrop {
  -webkit-filter: blur(2px);
  filter: blur(2px);
  box-shadow: 0 0 49px 10px rgba(45, 37, 19, 0.13);
}

.slider3d__carousel .carousel-item img.view {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 225px;
  height: 225px;
  border-radius: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  box-shadow: 0 0 20px 5px rgba(255, 183, 11, 0.13);
  transition: opacity .6s ease 1s, box-shadow .5s ease, -webkit-transform 1s ease-out .4s;
  transition: transform 1s ease-out .4s, opacity .6s ease 1s, box-shadow .5s ease;
  transition: transform 1s ease-out .4s, opacity .6s ease 1s, box-shadow .5s ease, -webkit-transform 1s ease-out .4s;
  object-fit: none;
  font-family: "object-fit: none";
}

.slider3d__overlay {
  position: absolute;
  left: 50%;
  top: 44%;
  width: 1px;
  height: 1px;
  transition: opacity .5s ease 1.2s, -webkit-transform .5s ease;
  transition: transform .5s ease, opacity .5s ease 1.2s;
  transition: transform .5s ease, opacity .5s ease 1.2s, -webkit-transform .5s ease;
  opacity: 0;
}

.slider3d__overlay.js-animation-finished {
  opacity: 1;
}

.js-slide-2 .slider3d__overlay {
  -webkit-transform: rotate(57deg);
  -ms-transform: rotate(57deg);
  transform: rotate(57deg);
}

.js-slide-3 .slider3d__overlay {
  -webkit-transform: rotate(155deg);
  -ms-transform: rotate(155deg);
  transform: rotate(155deg);
}

.js-slide-4 .slider3d__overlay {
  -webkit-transform: rotate(237deg);
  -ms-transform: rotate(237deg);
  transform: rotate(237deg);
}

.slider3d__overlay-circle {
  position: absolute;
  left: 0;
  top: 0;
  border-radius: 50%;
  transition: -webkit-transform .5s ease;
  transition: transform .5s ease;
  transition: transform .5s ease, -webkit-transform .5s ease;
  -webkit-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
}

.slider3d__overlay-circle:before, .slider3d__overlay-circle:after {
  content: '';
  position: absolute;
  width: 7px;
  height: 7px;
  background-color: #0a0c0a;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  transition: all .2s ease;
}

.slider3d__overlay-circle--big {
  width: 402px;
  height: 403px;
  border: 1px solid #ffffff;
}

.slider3d__overlay-circle--big:before {
  left: 62%;
  top: 2px;
}

.js-slide-2 .slider3d__overlay-circle--big:before {
  right: 0;
  top: -2px;
  width: 14px;
  height: 14px;
  -webkit-transform: rotate(78deg);
  -ms-transform: rotate(78deg);
  transform: rotate(78deg);
}

.slider3d__overlay-circle--big:after {
  right: 62%;
  bottom: 3px;
}

.js-slide-4 .slider3d__overlay-circle--big:after {
  width: 14px;
  right: 61%;
  bottom: -1px;
  height: 14px;
  -webkit-transform: rotate(78deg);
  -ms-transform: rotate(78deg);
  transform: rotate(78deg);
}

.slider3d__overlay-circle--medium {
  width: 280px;
  height: 279px;
  border: 2px solid #ffffff;
}

.js-slide-3 .slider3d__overlay-circle--medium {
  -webkit-transform: translate3d(-50%, -50%, 0) rotate(47deg);
  transform: translate3d(-50%, -50%, 0) rotate(47deg);
}

.slider3d__overlay-circle--medium:before {
  left: 17%;
  bottom: 27px;
}

.js-slide-3 .slider3d__overlay-circle--medium:before {
  width: 14px;
  height: 14px;
  left: 14%;
  -webkit-transform: rotate(26deg);
  -ms-transform: rotate(26deg);
  transform: rotate(26deg);
}

.slider3d__overlay-circle--medium:after {
  right: 2%;
  top: 79px;
}

.js-slide-1 .slider3d__overlay-circle--medium:after {
  right: 1.5%;
  top: 70px;
  width: 14px;
  height: 14px;
}

.slider3d__text {
  position: absolute;
  top: 33px;
  left: 91%;
  width: 275px;
  color: black;
  font-family: "RobotoRegular", sans-serif;
  font-size: 18px;
  line-height: 28px;
  transition: opacity 1s ease .5s, -webkit-transform .5s ease;
  transition: transform .5s ease, opacity 1s ease .5s;
  transition: transform .5s ease, opacity 1s ease .5s, -webkit-transform .5s ease;
  opacity: 0;
}

.slider3d__text.js-animation-finished {
  opacity: 1;
}

.slider3d__text.js-animation-finished .slider3d__text-item {
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
}

.js-slide-1 .slider3d__text {
  -webkit-transform: translate3d(0, 172px, 0);
  transform: translate3d(0, 172px, 0);
}

.js-slide-3 .slider3d__text {
  -webkit-transform: translate3d(0, -119px, 0);
  transform: translate3d(0, -119px, 0);
}

.js-slide-4 .slider3d__text {
  -webkit-transform: translate3d(0, -290px, 0);
  transform: translate3d(0, -290px, 0);
}

.slider3d__text-item {
  opacity: 0.1;
  -webkit-transform: translate3d(0, 200px, 0);
  transform: translate3d(0, 200px, 0);
  transition: opacity .4s ease, -webkit-transform .8s ease .2s;
  transition: opacity .4s ease, transform .8s ease .2s;
  transition: opacity .4s ease, transform .8s ease .2s, -webkit-transform .8s ease .2s;
}

.slider3d__text-item:not(:first-child) {
  margin-top: 33px;
}

.js-slide-1 .slider3d__text-item:nth-child(1) {
  opacity: 1;
}

.slider3d__text-item:nth-child(2) {
  transition: opacity .4s ease, -webkit-transform .8s ease .4s;
  transition: opacity .4s ease, transform .8s ease .4s;
  transition: opacity .4s ease, transform .8s ease .4s, -webkit-transform .8s ease .4s;
}

.js-slide-2 .slider3d__text-item:nth-child(2) {
  opacity: 1;
}

.slider3d__text-item:nth-child(3) {
  transition: opacity .4s ease, -webkit-transform .8s ease .6s;
  transition: opacity .4s ease, transform .8s ease .6s;
  transition: opacity .4s ease, transform .8s ease .6s, -webkit-transform .8s ease .6s;
}

.js-slide-3 .slider3d__text-item:nth-child(3) {
  opacity: 1;
}

.slider3d__text-item:nth-child(4) {
  transition: opacity .4s ease, -webkit-transform .8s ease .8s;
  transition: opacity .4s ease, transform .8s ease .8s;
  transition: opacity .4s ease, transform .8s ease .8s, -webkit-transform .8s ease .8s;
}

.js-slide-4 .slider3d__text-item:nth-child(4) {
  opacity: 1;
}

.preview {
  height: 100vh;
  width: 100%;
  background-color: #f5f5f5;
  overflow: hidden;
}

.preview .pageNumber__square {
  background-color: #f5f5f5;
}

.preview .pageNumber__container {
  top: calc(39% - 120px);
}

.preview .bottomBtn {
  right: auto;
}

.preview .textBlock {
  max-width: 280px;
}

.preview .textBlock.js-animation-finished .textBlock__item-big > span span {
  width: calc(100% + 10px);
}

.preview .textBlock.js-animation-finished .textBlock__item-big > span:after {
  right: -5px;
}

.preview__container {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.preview__backdrop {
  position: absolute;
  left: 0;
  top: 54%;
  width: 100%;
  height: auto;
  -webkit-transform: translate3d(0, calc(-50% + 86px), 0);
  transform: translate3d(0, calc(-50% + 86px), 0);
  z-index: 0;
  transition: -webkit-transform 1s ease;
  transition: transform 1s ease;
  transition: transform 1s ease, -webkit-transform 1s ease;
}

.js-slide-1 .preview__backdrop .preview__text--1 {
  opacity: 1;
  transition: opacity .3s ease .4s, -webkit-transform 1s ease;
  transition: opacity .3s ease .4s, transform 1s ease;
  transition: opacity .3s ease .4s, transform 1s ease, -webkit-transform 1s ease;
}

.js-slide-2 .preview__backdrop {
  -webkit-transform: translate3d(0, calc(-50% - 75px), 0);
  transform: translate3d(0, calc(-50% - 75px), 0);
}

.js-slide-2 .preview__backdrop .preview__text--1 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-2 .preview__backdrop .preview__text--2 {
  opacity: 1;
}

.js-slide-2 .preview__backdrop .preview__image--1 {
  opacity: 0.35;
}

.js-slide-3 .preview__backdrop {
  -webkit-transform: translate3d(0, calc(-50% - 290px), 0);
  transform: translate3d(0, calc(-50% - 290px), 0);
}

.js-slide-3 .preview__backdrop .preview__text--1 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-3 .preview__backdrop .preview__text--2 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-3 .preview__backdrop .preview__text--3 {
  opacity: 1;
}

.js-slide-3 .preview__backdrop .preview__image--1 {
  opacity: 0;
}

.js-slide-3 .preview__backdrop .preview__image--2,
.js-slide-3 .preview__backdrop .preview__image--3 {
  opacity: 0.25;
}

.js-slide-4 .preview__backdrop {
  -webkit-transform: translate3d(0, calc(-50% - 470px), 0);
  transform: translate3d(0, calc(-50% - 470px), 0);
}

.js-slide-4 .preview__backdrop .preview__text--1 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-4 .preview__backdrop .preview__text--2 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-4 .preview__backdrop .preview__text--3 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-4 .preview__backdrop .preview__text--4 {
  opacity: 1;
}

.js-slide-4 .preview__backdrop .preview__image--1 {
  opacity: 0;
}

.js-slide-4 .preview__backdrop .preview__image--2,
.js-slide-4 .preview__backdrop .preview__image--3 {
  opacity: 0;
}

.js-slide-4 .preview__backdrop .preview__image--4,
.js-slide-4 .preview__backdrop .preview__image--5 {
  opacity: 0.25;
}

.js-slide-5 .preview__backdrop {
  -webkit-transform: translate3d(0, calc(-50% - 640px), 0);
  transform: translate3d(0, calc(-50% - 640px), 0);
}

.js-slide-5 .preview__backdrop .preview__text--1 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-5 .preview__backdrop .preview__text--2 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-5 .preview__backdrop .preview__text--3 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-5 .preview__backdrop .preview__text--4 {
  transition: opacity .3s ease, -webkit-transform 1s ease;
  transition: opacity .3s ease, transform 1s ease;
  transition: opacity .3s ease, transform 1s ease, -webkit-transform 1s ease;
  -webkit-transform: translate3d(0, 30px, 0);
  transform: translate3d(0, 30px, 0);
  opacity: 0;
}

.js-slide-5 .preview__backdrop .preview__text--5 {
  opacity: 1;
}

.js-slide-5 .preview__backdrop .preview__image--1 {
  opacity: 0;
}

.js-slide-5 .preview__backdrop .preview__image--2,
.js-slide-5 .preview__backdrop .preview__image--3 {
  opacity: 0;
}

.js-slide-5 .preview__backdrop .preview__image--4,
.js-slide-5 .preview__backdrop .preview__image--5 {
  opacity: 0.2;
}

.js-slide-5 .preview__backdrop .preview__image--6,
.js-slide-5 .preview__backdrop .preview__image--7 {
  opacity: .25;
}

.preview__images, .preview__texts, .preview__lines {
  position: relative;
  width: 100%;
  height: 100%;
}

.preview__images {
  transition: opacity .8s ease .5s, -webkit-transform 1s ease .5s;
  transition: opacity .8s ease .5s, transform 1s ease .5s;
  transition: opacity .8s ease .5s, transform 1s ease .5s, -webkit-transform 1s ease .5s;
}

.preview__texts {
  transition: opacity .8s ease .3s, -webkit-transform 1s ease .3s;
  transition: opacity .8s ease .3s, transform 1s ease .3s;
  transition: opacity .8s ease .3s, transform 1s ease .3s, -webkit-transform 1s ease .3s;
}

.preview__lines {
  position: absolute;
  left: 0;
  top: 54%;
  width: 100%;
  height: auto;
  -webkit-transform: translate3d(0, calc(-50% + 86px), 0);
  transform: translate3d(0, calc(-50% + 86px), 0);
  z-index: 3;
}

.js-slide-1 .preview__lines .preview__line--1 {
  transition: width .4s ease .4s, right .4s ease .4s;
}

.js-slide-1 .preview__lines .preview__line--2 {
  transition: height .4s ease .3s, width .4s ease .4s, -webkit-transform 0.6s ease .3s;
  transition: height .4s ease .3s, transform 0.6s ease .3s, width .4s ease .4s;
  transition: height .4s ease .3s, transform 0.6s ease .3s, width .4s ease .4s, -webkit-transform 0.6s ease .3s;
}

.js-slide-1 .preview__lines .preview__line--2:before {
  top: 0;
  right: 0;
  height: 10px;
  width: 0;
  transition: width .4s ease;
}

.js-slide-1 .preview__lines .preview__line--3 {
  top: 215px;
  transition: top 1s ease, height .4s ease .4s, width .5s ease, right .5s ease;
}

.js-slide-1 .preview__lines .preview__line--4 {
  top: 453px;
  transition: top 1s ease, height .2s ease .3s, width .2s ease .4s;
}

.js-slide-1 .preview__lines .preview__line--4:before {
  right: 0;
  top: 0;
  width: 0;
  height: 10px;
  transition: width .4s ease;
}

.js-slide-1 .preview__lines .preview__line--5 {
  top: 600px;
  transition: top 1s ease, width .4s ease .3s;
}

.js-slide-1 .preview__lines .preview__line--5:before {
  left: 0;
  bottom: 0;
  width: 10px;
  height: 0;
  transition: height .4s ease;
}

.js-slide-2 .preview__lines .preview__line--1 {
  width: 0;
}

.js-slide-2 .preview__lines .preview__line--2 {
  height: 168px;
  -webkit-transform: translate3d(0, -270px, 0);
  transform: translate3d(0, -270px, 0);
}

.js-slide-2 .preview__lines .preview__line--2:before {
  top: 0;
  right: 0;
  height: 10px;
  width: 120px;
}

.js-slide-2 .preview__lines .preview__line--3 {
  top: 30px;
  transition: top 1s ease, height .4s ease .4s, width .5s ease, right .5s ease;
}

.js-slide-2 .preview__lines .preview__line--4 {
  top: 283px;
  transition: top 1s ease, height .2s ease .3s, width .2s ease .4s;
}

.js-slide-2 .preview__lines .preview__line--4:before {
  right: 0;
  top: 0;
  width: 0;
  height: 10px;
  transition: width .4s ease;
}

.js-slide-2 .preview__lines .preview__line--5 {
  top: 420px;
  transition: top 1s ease, width .4s ease .3s;
}

.js-slide-2 .preview__lines .preview__line--5:before {
  left: 0;
  bottom: 0;
  width: 10px;
  height: 0;
  transition: height .4s ease;
}

.js-slide-3 .preview__lines .preview__line--1 {
  width: 0;
}

.js-slide-3 .preview__lines .preview__line--2 {
  height: 0;
  -webkit-transform: translate3d(0, -270px, 0);
  transform: translate3d(0, -270px, 0);
}

.js-slide-3 .preview__lines .preview__line--2:before {
  top: 0;
  right: auto;
  left: -110px;
  height: 10px;
  width: 0;
}

.js-slide-3 .preview__lines .preview__line--3 {
  top: -123px;
  right: 704px;
  height: 10px;
  width: 166px;
  transition: top 1s ease, height .4s ease, width .5s ease .7s, right .5s ease .7s;
}

.js-slide-3 .preview__lines .preview__line--4 {
  top: 68px;
  transition: top 1s ease, height .2s ease .3s, width .2s ease .4s;
}

.js-slide-3 .preview__lines .preview__line--4:before {
  right: 0;
  top: 0;
  width: 0;
  height: 10px;
  transition: width .4s ease;
}

.js-slide-3 .preview__lines .preview__line--5 {
  top: 205px;
  transition: top 1s ease, width .4s ease .3s;
}

.js-slide-3 .preview__lines .preview__line--5:before {
  left: 0;
  bottom: 0;
  width: 10px;
  height: 0;
  transition: height .4s ease;
}

.js-slide-4 .preview__lines .preview__line--1 {
  width: 0;
}

.js-slide-4 .preview__lines .preview__line--2 {
  height: 0;
  -webkit-transform: translate3d(0, -270px, 0);
  transform: translate3d(0, -270px, 0);
}

.js-slide-4 .preview__lines .preview__line--2:before {
  top: 0;
  right: auto;
  left: -110px;
  height: 10px;
  width: 0;
}

.js-slide-4 .preview__lines .preview__line--3 {
  top: -140px;
  right: 704px;
  height: 10px;
  width: 0;
  transition: top 1s ease, height .4s ease, width .5s ease, right .5s ease .7s;
}

.js-slide-4 .preview__lines .preview__line--4 {
  top: -130px;
  width: 10px;
  height: 40px;
  transition: top 1s ease, height .4s ease .3s, width .2s ease;
}

.js-slide-4 .preview__lines .preview__line--4:before {
  right: 0;
  top: 0;
  width: 160px;
  height: 10px;
  transition: width .4s ease .6s;
}

.js-slide-4 .preview__lines .preview__line--5 {
  top: 35px;
  transition: top 1s ease, width .4s ease .3s;
}

.js-slide-4 .preview__lines .preview__line--5:before {
  left: 0;
  bottom: 0;
  width: 10px;
  height: 0;
  transition: height .4s ease;
}

.js-slide-5 .preview__lines .preview__line--1 {
  width: 0;
}

.js-slide-5 .preview__lines .preview__line--2 {
  height: 0;
  -webkit-transform: translate3d(0, -270px, 0);
  transform: translate3d(0, -270px, 0);
}

.js-slide-5 .preview__lines .preview__line--2:before {
  top: 0;
  right: auto;
  left: -110px;
  height: 10px;
  width: 0;
}

.js-slide-5 .preview__lines .preview__line--3 {
  top: -140px;
  left: auto;
  right: 704px;
  height: 10px;
  width: 0;
  transition: top 1s ease, height .4s ease, width .5s ease, right .5s ease .7s;
}

.js-slide-5 .preview__lines .preview__line--4 {
  top: -320px;
  width: 0;
  height: 0;
  transition: top 1s ease, height .2s ease .3s, width .2s ease .4s;
}

.js-slide-5 .preview__lines .preview__line--4:before {
  right: 0;
  top: 0;
  width: 0;
  height: 10px;
  transition: width .4s ease;
}

.js-slide-5 .preview__lines .preview__line--5 {
  top: -85px;
  width: 420px;
  transition: top 1s ease, width .4s ease .2s;
}

.js-slide-5 .preview__lines .preview__line--5:before {
  left: 0;
  bottom: 0;
  width: 10px;
  height: 40px;
  transition: height .4s ease .5s;
}

.preview__image {
  position: absolute;
  left: 0;
  top: 0;
  width: 215px;
  height: 360px;
  box-shadow: 0 0 49px 10px rgba(45, 37, 19, 0.13);
  opacity: .8;
  transition: opacity 1s ease;
  overflow: hidden;
}

.preview__image--1 {
  left: 767px;
  top: 0;
}

.preview__image--2 {
  left: 533px;
  top: 0;
  box-shadow: none;
}

.preview__image--3 {
  left: 73px;
  top: 123px;
}

.preview__image--4 {
  left: 767px;
  top: 380px;
  box-shadow: none;
}

.preview__image--5 {
  left: 1010px;
  top: 380px;
}

.preview__image--6 {
  left: 73px;
  top: 506px;
}

.preview__image--7 {
  left: 533px;
  top: 560px;
  box-shadow: none;
}

.preview__image:before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  background-color: #f5f5f5;
  opacity: .85;
}

.preview__image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  font-family: "object-fit: cover";
}

.preview__text {
  position: absolute;
  width: 300px;
  color: black;
  font-family: "RobotoRegular", sans-serif;
  font-size: 18px;
  line-height: 28px;
  letter-spacing: 0.1px;
}

.preview__text--1 {
  top: -106px;
  left: 145px;
}

.preview__text--2 {
  right: 140px;
  top: 119px;
  transition: opacity 1s ease .6s;
}

.preview__text--3 {
  top: 295px;
  left: 145px;
  transition: opacity 1s ease .6s;
}

.preview__text--4 {
  right: 140px;
  top: 495px;
  transition: opacity 1s ease .6s;
}

.preview__text--5 {
  top: 695px;
  left: 145px;
  transition: opacity 1s ease .6s;
}

.preview__line {
  position: absolute;
  background-color: #ffe60b;
  transition: height .4s ease, width .4s ease, top 1s ease, -webkit-transform 0.6s ease;
  transition: height .4s ease, width .4s ease, transform 0.6s ease, top 1s ease;
  transition: height .4s ease, width .4s ease, transform 0.6s ease, top 1s ease, -webkit-transform 0.6s ease;
}

.preview__line:before, .preview__line:after {
  content: '';
  position: absolute;
  transition: height .4s ease 0.5s, width .4s ease 0.5s, -webkit-transform 1s ease;
  transition: height .4s ease 0.5s, width .4s ease 0.5s, transform 1s ease;
  transition: height .4s ease 0.5s, width .4s ease 0.5s, transform 1s ease, -webkit-transform 1s ease;
  background-color: #ffe60b;
}

.js-is-hidden-for-animation .preview__line {
  width: 0;
}

.preview__line--1 {
  right: 704px;
  top: -131px;
  width: 166px;
  height: 10px;
}

.js-is-hidden-for-animation .preview__line--1 {
  right: 654px;
}

.preview__line--2 {
  right: 430px;
  top: 48px;
  width: 10px;
  height: 40px;
}

.preview__line--3 {
  right: 1125px;
  width: 10px;
  height: 40px;
}

.preview__line--4 {
  left: 840px;
  width: 40px;
  height: 10px;
}

.preview__line--5 {
  left: 145px;
  width: 40px;
  height: 10px;
}

.preview__main {
  position: absolute;
  top: 44%;
  left: 492px;
  width: 295px;
  height: 500px;
  -webkit-transform: translate3d(0, calc(-50% + 86px), 0);
  transform: translate3d(0, calc(-50% + 86px), 0);
  box-shadow: 0 0 49px 10px rgba(45, 37, 19, 0.13);
  z-index: 2;
  transition: opacity .8s ease, -webkit-transform 1s ease;
  transition: opacity .8s ease, transform 1s ease;
  transition: opacity .8s ease, transform 1s ease, -webkit-transform 1s ease;
}

.preview__main .carousel-item {
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
}

.preview__main .carousel-item img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  font-family: "object-fit: cover";
}

.slider {
  height: 100vh;
  width: 100%;
  background-color: black;
  overflow: hidden;
}

.slider .fixed-width-1280 {
  float: left;
  margin-left: 50%;
  -webkit-transform: translate3d(-50%, 0, 0);
  transform: translate3d(-50%, 0, 0);
  background-color: #0a0c0a;
  overflow: hidden;
}

.slider .fixed-width-1280:before, .slider .fixed-width-1280:after {
  content: '';
  position: absolute;
  top: 0;
  height: 100%;
  z-index: 2;
}

.slider .fixed-width-1280:before {
  width: 90px;
  left: 0;
  background: linear-gradient(to right, black 0%, black 10%, transparent 100%);
}

.slider .fixed-width-1280:after {
  width: 300px;
  right: 0;
  background: linear-gradient(to left, black 0%, black 20%, transparent 100%);
}

.slider .textBlock__item-big {
  margin-top: 28px;
  letter-spacing: -0.1px;
}

.slider .textBlock__item-big > span {
  margin: 0 15px;
}

.slider__inner {
  height: 1200px;
}

.slider__inner.js-animation-finished .slider__line,
.slider__inner.js-animation-finished .slider__button,
.slider__inner.js-animation-finished .slider__carousel {
  opacity: 1;
  transition: opacity 1s ease;
}

.slider .pageNumber__line {
  background-color: #2d2d2d;
}

.slider .pageNumber__container {
  top: 151px;
}

.slider .pageNumber__square {
  background-color: #0a0c0a;
  border: 1px solid #2d2d2d;
}

.slider .pageNumber__number {
  color: #f6f6f6;
}

.slider .textBlock {
  max-width: 1000px;
  top: 155px;
  color: white;
  z-index: 3;
}

.slider .textBlock.js-animation-finished .textBlock__item-big > span span {
  width: calc(100% + 20px);
  top: 100%;
  left: -10px;
}

.slider .textBlock.js-animation-finished .textBlock__item-big > span:before {
  left: -10px;
  top: 40px;
}

.slider .textBlock.js-animation-finished .textBlock__item-big > span:after {
  right: -10px;
  bottom: 0;
}

.slider__nextBtn {
  position: absolute;
  top: 486px;
  right: 100px;
  height: 500px;
  width: calc(100% - 200px);
  z-index: 3;
  cursor: url(data:image/svg+xml;utf8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iaXNvLTg4NTktMSI/Pgo8IS0tIEdlbmVyYXRvcjogQWRvYmUgSWxsdXN0cmF0b3IgMTkuMS4wLCBTVkcgRXhwb3J0IFBsdWctSW4gLiBTVkcgVmVyc2lvbjogNi4wMCBCdWlsZCAwKSAgLS0+CjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgdmVyc2lvbj0iMS4xIiBpZD0iQ2FwYV8xIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDMxLjQ5IDMxLjQ5IiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAzMS40OSAzMS40OTsiIHhtbDpzcGFjZT0icHJlc2VydmUiIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiPgo8cGF0aCBkPSJNMjEuMjA1LDUuMDA3Yy0wLjQyOS0wLjQ0NC0xLjE0My0wLjQ0NC0xLjU4NywwYy0wLjQyOSwwLjQyOS0wLjQyOSwxLjE0MywwLDEuNTcxbDguMDQ3LDguMDQ3SDEuMTExICBDMC40OTIsMTQuNjI2LDAsMTUuMTE4LDAsMTUuNzM3YzAsMC42MTksMC40OTIsMS4xMjcsMS4xMTEsMS4xMjdoMjYuNTU0bC04LjA0Nyw4LjAzMmMtMC40MjksMC40NDQtMC40MjksMS4xNTksMCwxLjU4NyAgYzAuNDQ0LDAuNDQ0LDEuMTU5LDAuNDQ0LDEuNTg3LDBsOS45NTItOS45NTJjMC40NDQtMC40MjksMC40NDQtMS4xNDMsMC0xLjU3MUwyMS4yMDUsNS4wMDd6IiBmaWxsPSIjRkZGRkZGIi8+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+CjxnPgo8L2c+Cjwvc3ZnPgo=), auto;
}

.slider__carousel {
  position: absolute;
  height: auto;
  width: calc(100% - 135px);
  top: 486px;
  left: 135px;
  opacity: 0;
}

.slider__carousel:before {
  content: '';
  display: block;
  position: absolute;
  background-color: white;
  width: 100vw;
  height: 1px;
  top: 14px;
  left: -135px;
}

.slider__carousel .slick-list {
  overflow: visible;
}

.slider__carousel .slick-carousel__item {
  display: block;
  position: relative;
  width: auto;
  height: auto;
  margin-right: 35px;
}

.slider__carousel .slick-carousel__item.slick-current .slick-carousel__item-star, .slider__carousel .slick-carousel__item.js-active .slick-carousel__item-star {
  -webkit-transform: scale(1) rotate(45deg);
  -ms-transform: scale(1) rotate(45deg);
  transform: scale(1) rotate(45deg);
  opacity: 1;
}

.slider__carousel .slick-carousel__item.slick-current .slick-carousel__item-title, .slider__carousel .slick-carousel__item.js-active .slick-carousel__item-title {
  color: #ffe60b;
  opacity: 1;
}

.slider__carousel .slick-carousel__item.slick-current .slick-carousel__item-text, .slider__carousel .slick-carousel__item.js-active .slick-carousel__item-text {
  opacity: 1;
}

.slider__carousel .slick-carousel__item.slick-current .slick-carousel__item-line, .slider__carousel .slick-carousel__item.js-active .slick-carousel__item-line {
  opacity: 1;
}

.slider__carousel .slick-carousel__item-star {
  position: absolute;
  width: 17px;
  height: 17px;
  left: 6px;
  top: 6px;
  background-color: white;
  -webkit-transform: scale(0.45) rotate(45deg);
  -ms-transform: scale(0.45) rotate(45deg);
  transform: scale(0.45) rotate(45deg);
  transition: all .4s ease;
}

.slider__carousel .slick-carousel__item-title {
  color: white;
  opacity: 0.1;
  margin-top: 64px;
  transition: all .4s ease;
}

.slider__carousel .slick-carousel__item-line {
  width: 10px;
  height: 40px;
  margin-top: 56px;
  margin-bottom: 34px;
  margin-left: 9px;
  opacity: 0;
  background-color: #ffe60b;
  transition: opacity .4s ease;
}

.slider__carousel .slick-carousel__item-text {
  color: white;
  font-family: "RobotoRegular", sans-serif;
  font-size: 18px;
  line-height: 28px;
  width: 300px;
  margin-left: 8px;
  opacity: 0.1;
  transition: opacity .4s ease;
}

.slider__button {
  position: absolute;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  left: 145px;
  bottom: 130px;
  width: 157px;
  height: 40px;
  text-decoration: none;
  overflow: hidden;
  opacity: 0;
}

.slider__button:before, .slider__button:after {
  content: '';
  position: absolute;
  top: 0;
  height: 100%;
  width: 100%;
  transition: -webkit-transform .4s ease-out;
  transition: transform .4s ease-out;
  transition: transform .4s ease-out, -webkit-transform .4s ease-out;
}

.slider__button:before {
  left: 0;
  background-color: #ffe60b;
  -webkit-transform: translate3d(-152px, 0, 0);
  transform: translate3d(-152px, 0, 0);
  z-index: 1;
}

.slider__button:after {
  right: 0;
  background-color: #2b2c2b;
  -webkit-transform: translate3d(87px, 0, 0);
  transform: translate3d(87px, 0, 0);
  z-index: 0;
}

.slider__button span {
  position: relative;
  color: white;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  text-transform: uppercase;
  z-index: 2;
}

.canvas {
  width: 100%;
  height: 100vh;
  background-color: #ffe800;
  overflow: hidden;
}

.canvas .textBlock__item-big {
  margin-top: 28px;
  letter-spacing: 0.4px;
}

.canvas .textBlock__item-big > span {
  margin-left: 13px;
  margin-right: 16px;
}

.canvas__inner {
  height: 893px;
}

.canvas__inner.js-animation-finished .canvas__text,
.canvas__inner.js-animation-finished .canvas__threejs {
  opacity: 1;
}

.canvas .pageNumber__line {
  background-color: #f0d808;
}

.canvas .pageNumber__container {
  top: 140px;
}

.canvas .pageNumber__square {
  background-color: #ffe60b;
  border: 1px solid #f0d808;
}

.canvas .textBlock {
  top: 147px;
  max-width: 955px;
  z-index: 4;
}

.canvas .textBlock.js-animation-finished .textBlock__item-big > span span {
  width: calc(100% + 20px);
  top: 100%;
  left: -10px;
  background-color: white;
}

.canvas .textBlock.js-animation-finished .textBlock__item-big > span:before {
  left: -10px;
  top: 40px;
  background-color: white;
}

.canvas .textBlock.js-animation-finished .textBlock__item-big > span:after {
  right: -10px;
  bottom: 0;
  background-color: white;
}

.canvas__threejs {
  position: absolute;
  opacity: 0;
  transition: opacity 1s ease;
  width: 603px;
  height: 603px;
  left: 140px;
  bottom: 20px;
}

.canvas__threejs:before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  opacity: 1;
  background-image: radial-gradient(circle 311px at 50% 51%, transparent 0%, #ffe800 100%);
  z-index: 3;
}

.canvas__threejs svg {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 2;
  opacity: 0.4;
}

.canvas__threejs canvas {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate3d(-50%, -50%, 0);
  transform: translate3d(-50%, -50%, 0);
  z-index: 1;
  opacity: 1;
}

.canvas__text {
  position: absolute;
  right: 140px;
  top: 370px;
  width: 300px;
  opacity: 0;
  transition: opacity 1s ease;
  z-index: 3;
}

.canvas__text-item {
  position: relative;
  color: black;
  font-family: "RobotoRegular", sans-serif;
  font-size: 18px;
  line-height: 28px;
  transition: -webkit-transform 1s ease;
  transition: transform 1s ease;
  transition: transform 1s ease, -webkit-transform 1s ease;
}

.canvas__text-item:before {
  content: '';
  position: absolute;
  top: 7px;
  left: -85px;
  width: 30px;
  height: 6px;
  background-color: white;
  opacity: 0;
  transition: opacity .3s ease;
}

.canvas__text-item:not(:first-child) {
  margin-top: 30px;
}

.canvas__text-item.js-active {
  -webkit-transform: translate3d(-55px, 0, 0);
  transform: translate3d(-55px, 0, 0);
}

.canvas__text-item.js-active:before {
  opacity: 1;
  transition: opacity .7s ease;
}

.join {
  position: relative;
  width: 100%;
  height: 487px;
}

.join__bg {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.join__bg:before {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-image: linear-gradient(to right, rgba(10, 12, 10, 0.6) 0%, rgba(10, 12, 10, 0) 100%);
}

.join__bg img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  font-family: "object-fit: cover";
}

.join .fixed-width-1280 {
  position: relative;
  z-index: 2;
}

.join__inner {
  position: absolute;
  top: 124px;
  left: 146px;
}

.join__subtitle {
  color: white;
  font-family: "RobotoRegular", sans-serif;
  font-size: 13px;
  line-height: 21px;
}

.join__title {
  color: white;
  font-family: "RobotoLight", sans-serif;
  font-size: 46px;
  line-height: 56px;
  margin-top: 28px;
}

.join__buttons {
  margin-top: 57px;
}

.pageNumber {
  position: absolute;
  left: 54px;
  top: 0;
  width: 1px;
  height: 100%;
  -webkit-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0);
  transition: -webkit-transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out;
  transition: transform 0.3s ease-in-out, -webkit-transform 0.3s ease-in-out;
  z-index: 2;
}

.pageNumber.js-animation-finished {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.pageNumber.js-animation-finished .pageNumber__container {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.pageNumber__line {
  width: 1px;
  height: 100%;
  background-color: #e2e2e2;
}

.pageNumber__container {
  position: absolute;
  left: -29px;
  top: 26vh;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
  -webkit-transform: translate3d(0, -250%, 0);
  transform: translate3d(0, -250%, 0);
  transition: -webkit-transform 1.2s ease-in-out;
  transition: transform 1.2s ease-in-out;
  transition: transform 1.2s ease-in-out, -webkit-transform 1.2s ease-in-out;
}

.pageNumber__square {
  width: 59px;
  height: 59px;
  border: 1px solid #e2e2e2;
  background-color: #ffffff;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  -webkit-transform-origin: 49% 51%;
  -ms-transform-origin: 49% 51%;
  transform-origin: 49% 51%;
}

.pageNumber__number {
  position: absolute;
  width: 100%;
  left: 0;
  top: 24px;
  color: black;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  text-align: center;
  z-index: 4;
}

.bottomBtn {
  position: absolute;
  right: -28px;
  bottom: -17px;
  cursor: pointer;
  -webkit-transform: rotate(-90deg) translate3d(-110px, 0, 0);
  transform: rotate(-90deg) translate3d(-110px, 0, 0);
  -webkit-transform-origin: left top 0;
  -ms-transform-origin: left top 0;
  transform-origin: left top 0;
  transition: -webkit-transform 1s ease;
  transition: transform 1s ease;
  transition: transform 1s ease, -webkit-transform 1s ease;
  z-index: 2;
}

.bottomBtn--white {
  -webkit-transform: rotate(-90deg) translate3d(0, 0, 0);
  transform: rotate(-90deg) translate3d(0, 0, 0);
}

.bottomBtn--white .bottomBtn__line span {
  background-color: white;
}

.bottomBtn--white .bottomBtn__text {
  color: white;
  opacity: 1;
}

.bottomBtn.js-animation-finished {
  -webkit-transform: rotate(-90deg) translate3d(0, 0, 0);
  transform: rotate(-90deg) translate3d(0, 0, 0);
}

.bottomBtn.js-animation-finished .bottomBtn__text {
  opacity: 1;
}

.bottomBtn__line {
  position: relative;
  display: inline-block;
  width: 100px;
  height: 5px;
  background-color: transparent;
  overflow: hidden;
}

.bottomBtn__line span {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: #0a0c0a;
  transition: -webkit-transform .5s ease;
  transition: transform .5s ease;
  transition: transform .5s ease, -webkit-transform .5s ease;
}

.bottomBtn__text {
  display: inline-block;
  position: absolute;
  left: calc(100% + 19px);
  top: 4px;
  color: black;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  letter-spacing: 1px;
  white-space: nowrap;
  opacity: 0;
  transition: all .6s ease 1s;
}

.progressBar {
  position: absolute;
  right: calc((100% - 1280px) / 2 + 60px);
  top: 155vh;
  width: 1px;
  height: 200px;
  background-color: #b4b4b4;
  color: black;
  font-family: "RobotoBold", sans-serif;
  font-size: 13px;
  font-weight: 700;
  z-index: 5;
  opacity: 0;
  -webkit-transform: translate3d(0, calc(-50% + 50px), 0);
  transform: translate3d(0, calc(-50% + 50px), 0);
  transition: opacity 1s ease, color .4s ease, -webkit-transform 1s ease;
  transition: transform 1s ease, opacity 1s ease, color .4s ease;
  transition: transform 1s ease, opacity 1s ease, color .4s ease, -webkit-transform 1s ease;
}

.progressBar.js-background {
  color: white;
}

.progressBar.js-background .progressBar__bar {
  background-color: white;
}

.progressBar.js-background-2 .progressBar__pages-page:hover {
  background-color: white;
}

.progressBar.js-fixed {
  position: fixed;
  top: 55%;
}

.progressBar.js-animation-finished {
  opacity: 1;
  -webkit-transform: translate3d(0, -50%, 0);
  transform: translate3d(0, -50%, 0);
}

.progressBar__inner {
  position: relative;
  width: 100%;
  height: 100%;
}

.progressBar__pages {
  position: absolute;
  bottom: 0;
  left: -2.5px;
  width: 5px;
  height: 100%;
}

.progressBar__pages-page {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  height: 25%;
  width: 100%;
  cursor: pointer;
  transition: background-color .4s ease;
}

.progressBar__pages-page span {
  display: block;
  opacity: 0;
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
  transition: opacity .4s ease, -webkit-transform .4s ease;
  transition: opacity .4s ease, transform .4s ease;
  transition: opacity .4s ease, transform .4s ease, -webkit-transform .4s ease;
}

.progressBar__pages-page:hover {
  background-color: #ffe60b;
}

.progressBar__pages-page:hover span {
  opacity: 1;
  -webkit-transform: rotate(-90deg) translate3d(0, -10px, 0);
  transform: rotate(-90deg) translate3d(0, -10px, 0);
}

.progressBar__bar {
  position: absolute;
  bottom: 0;
  left: -2.5px;
  width: 5px;
  height: 25%;
  background-color: #0a0c0a;
  transition: height 1.2s ease-in-out, background-color .4s ease, height .8s ease .4s;
}

.progressBar__current {
  position: absolute;
  right: -8px;
  bottom: -35px;
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
}

.progressBar__total {
  position: absolute;
  left: -8px;
  top: -35px;
  -webkit-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  transform: rotate(-90deg);
}

/* PAGES */

@media (max-width: 767px) and (orientation: landscape) {
  .header:after {
    display: none;
  }
  .header__links {
    padding-bottom: 100px;
  }
}

@media (max-height: 770px) {
  .join__inner {
    top: 155px;
  }
}

@media (min-width: 768px) {
  .preview__main .carousel-item {
    opacity: 0;
    transition: opacity 1s ease;
  }
  .js-slide-1 .preview__main .carousel-item:nth-child(1) {
    opacity: 1;
  }
  .js-slide-2 .preview__main .carousel-item:nth-child(2) {
    opacity: 1;
  }
  .js-slide-3 .preview__main .carousel-item:nth-child(3) {
    opacity: 1;
  }
  .js-slide-4 .preview__main .carousel-item:nth-child(4) {
    opacity: 1;
  }
  .js-slide-5 .preview__main .carousel-item:nth-child(5) {
    opacity: 1;
  }
}

@media (min-height: 800px) {
  .preview__backdrop {
    top: 50%;
  }
  .preview__lines {
    top: 50%;
  }
}

@media (min-width: 1259px) {
  body {
    overflow: hidden;
  }
}

@media (min-width: 1260px) {
  .textBlock__pagination-item:hover:before {
    height: 15px;
  }
  .btn--yellow:hover svg {
    fill: white;
  }
  .btn--yellow:hover span {
    color: white;
  }
  .btn--white:hover svg {
    fill: #ffe60b;
  }
  .btn--white:hover span {
    color: #ffe60b;
  }
  .header.js-fixed {
    position: fixed;
    transition: none;
    -webkit-transform: translate3d(0, -100%, 0);
    transform: translate3d(0, -100%, 0);
  }
  .header:not(.js-fixed) {
    -webkit-transform: none !important;
    -ms-transform: none !important;
    transform: none !important;
  }
  .header__inner {
    padding-top: 5px;
    margin-top: -5px;
  }
  .header__links-link {
    transition: color .5s ease;
  }
  .header__links-link:hover {
    color: white;
  }
  .header__links-link:not(:first-child) {
    margin-left: 40px;
  }
  .header__menu {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    margin-left: 92px;
  }
  .header__login:hover {
    color: white;
  }
  .header__languages-item:not(:first-child) {
    margin-top: 14px;
  }
  .header__languages-item:not(.js-active) {
    opacity: 0;
    visibility: hidden;
  }
  .header__languages-item {
    transition: color .5s ease, opacity .4s linear, visibility 0s .4s;
  }
  .header__languages-item:hover {
    color: white;
  }
  .header__burger {
    display: none;
  }
  .footer__social svg {
    transition: fill .5s ease;
  }
  .footer__social svg:hover {
    fill: #ffe60b;
  }
  .footer__links a {
    transition: color .5s ease;
  }
  .footer__links a:hover {
    color: #ffe60b;
  }
  .footer__vintage svg {
    transition: fill .5s ease;
  }
  .footer__vintage svg:hover {
    fill: #ffe60b;
  }
  .intro__more:hover .intro__more-line span {
    -webkit-transform: translate3d(30px, 0, 0);
    transform: translate3d(30px, 0, 0);
  }
  .slider3d .bottomBtn {
    left: 43px;
  }
  .slider3d .pageNumber__container {
    top: calc(50% - 100px);
  }
  .slider3d .textBlock {
    top: calc(50% - 120px);
  }
  .slider3d .textBlock .textBlock__item-big {
    margin-left: -3px;
  }
  .preview .bottomBtn {
    left: 43px;
  }
  .preview .textBlock {
    top: calc(39% - 120px);
  }
  .preview .textBlock .textBlock__item-big {
    margin-left: -3px;
  }
  .js-is-hidden-for-animation .preview__images {
    opacity: 0;
    -webkit-transform: translate3d(0, 150px, 0);
    transform: translate3d(0, 150px, 0);
  }
  .js-is-hidden-for-animation .preview__texts {
    opacity: 0;
    -webkit-transform: translate3d(0, 150px, 0);
    transform: translate3d(0, 150px, 0);
  }
  .preview__text {
    opacity: .2;
    transition: opacity 1s ease;
  }
  .js-is-hidden-for-animation .preview__main {
    opacity: 0;
    -webkit-transform: translate3d(0, calc(-50% + 200px), 0);
    transform: translate3d(0, calc(-50% + 200px), 0);
  }
  .slider__button:hover:before, .slider__button:hover:after {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  .bottomBtn:hover .bottomBtn__line span {
    -webkit-transform: translate3d(30px, 0, 0);
    transform: translate3d(30px, 0, 0);
  }
  [data-page='home'] #scrollInside {
    max-height: 100vh;
    width: 100%;
    overflow-x: hidden;
  }
}

@media (max-width: 1259px) and (min-width: 768px) {
  .header__login--outer {
    display: inline-block;
    position: absolute;
    right: 95px;
    top: 16px;
  }
  .header__login--inner {
    display: none;
  }
  .slider3d__carousel {
    pointer-events: none;
  }
}

@media (max-width: 1279px) {
  .header__inner {
    width: 100%;
  }
}

@media (max-width: 1259px) {
  .fixed-width-1280 {
    padding: 0 40px;
  }
  .h1 {
    font-size: 78px;
  }
  .textBlock {
    top: 121px;
    left: 39px;
  }
  .textBlock .textBlock__item-small,
  .textBlock .textBlock__item-big,
  .textBlock .textBlock__pagination {
    opacity: 1;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  .textBlock .textBlock__item-big > span:before, .textBlock .textBlock__item-big > span:after {
    height: 15px;
  }
  .textBlock .textBlock__item-big > span span {
    width: calc(100% + 20px);
  }
  .preloader.js-animation-finished {
    transition: opacity 0.8s linear;
    opacity: 0;
  }
  .header {
    position: fixed;
    height: 89px;
    transition: background-color 0.5s cubic-bezier(0.6, 0, 0.41, 1);
  }
  .header:after {
    content: '';
    display: block;
    position: fixed;
    width: calc(100% - 80px);
    height: 1px;
    top: 89px;
    left: 40px;
    background: #f1d608;
    transition: opacity .4s ease-out;
    z-index: 8;
    opacity: 0;
  }
  .header.js-animation-finished .header__login {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
  .header__inner {
    position: relative;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
    margin-top: -5px;
  }
  .header__logo {
    position: relative;
    width: 98px;
    height: 46px;
    margin-left: 40px;
    margin-top: 0;
    z-index: 9;
  }
  .header__links-link {
    display: block;
  }
  .header__links-link:not(:first-child) {
    margin-top: 33px;
  }
  .header__links {
    position: absolute;
    left: 0;
    top: 258px;
    width: 100%;
    text-align: center;
  }
  .header__menu {
    position: fixed;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background: #fbde0a;
    z-index: 8;
    overflow: auto;
    opacity: 0;
    visibility: hidden;
    -webkit-transform: translate3d(0, -25px, 0);
    transform: translate3d(0, -25px, 0);
    transition: opacity .4s ease, visibility 0s .4s, -webkit-transform .4s ease;
    transition: transform .4s ease, opacity .4s ease, visibility 0s .4s;
    transition: transform .4s ease, opacity .4s ease, visibility 0s .4s, -webkit-transform .4s ease;
  }
  .header__actions {
    position: absolute;
    top: 180px;
    left: 0;
    width: 100%;
    margin: 0;
    text-align: center;
  }
  .header__login {
    z-index: 8;
    margin-top: 4px;
    -webkit-transform: translate3d(0, -41px, 0);
    transform: translate3d(0, -41px, 0);
    transition: -webkit-transform 1.1s ease 0.2s;
    transition: transform 1.1s ease 0.2s;
    transition: transform 1.1s ease 0.2s, -webkit-transform 1.1s ease 0.2s;
  }
  .header__languages {
    width: 100%;
    margin: 0;
    text-align: center;
  }
  .header__languages-item {
    display: inline-block;
    padding-right: 0;
  }
  .header__languages-item:not(:first-child) {
    margin-left: 32px;
  }
  .header__languages-item.js-active {
    color: white;
  }
  .header__languages-inner {
    position: relative;
  }
  .header__languages-line {
    display: none;
  }
  .header__burger {
    position: absolute;
    width: 27px;
    height: 16px;
    right: 40px;
    top: 21px;
    z-index: 8;
  }
  .header__burger_inner {
    position: relative;
    width: 100%;
    height: 100%;
  }
  .header__burger_line {
    display: block;
    position: absolute;
    width: 100%;
    height: 2px;
    background-color: white;
    left: 0;
    transition: all .4s ease-out;
  }
  .header__burger_line.line-1 {
    top: 0;
  }
  .header__burger_line.line-2, .header__burger_line.line-3 {
    top: 7px;
  }
  .header__burger_line.line-4 {
    top: 14px;
  }
  body.js-menu-opened {
    overflow: hidden;
    position: fixed;
  }
  body.js-menu-opened .header:after {
    opacity: 1;
  }
  body.js-menu-opened .header__burger .line-1, body.js-menu-opened .header__burger .line-4 {
    width: 0;
    left: 50%;
    top: 7px;
  }
  body.js-menu-opened .header__burger .line-2 {
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }
  body.js-menu-opened .header__burger .line-3 {
    -webkit-transform: rotate(-45deg);
    -ms-transform: rotate(-45deg);
    transform: rotate(-45deg);
  }
  body.js-menu-opened .header__menu {
    opacity: 1;
    visibility: visible;
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    transition: opacity .4s ease, visibility 0s 0s, -webkit-transform .4s ease;
    transition: transform .4s ease, opacity .4s ease, visibility 0s 0s;
    transition: transform .4s ease, opacity .4s ease, visibility 0s 0s, -webkit-transform .4s ease;
  }
  .footer {
    height: 289px;
  }
  .footer__logo {
    left: 39px;
  }
  .footer__logo svg {
    width: 87px;
    height: 41px;
  }
  .footer__logo span {
    margin-top: 9px;
  }
  .footer__social {
    right: 43px;
    top: 67px;
  }
  .footer__social .icon-icon_in {
    width: 13px;
    height: 12px;
  }
  .footer__social .icon-icon_twitter {
    width: 13px;
    height: 11px;
  }
  .footer__social .icon-icon_insta {
    width: 12px;
    height: 12px;
  }
  .footer__center {
    width: calc(100% - 375px);
    left: 212px;
  }
  .footer__links a {
    font-size: 12px;
    margin-bottom: 14px;
  }
  .footer__buttons {
    margin-top: 41px;
  }
  .footer__vintage {
    right: 40px;
    top: 201px;
  }
  .intro {
    height: 600px;
  }
  .intro__title {
    left: 50%;
    width: 650px;
    -webkit-transform: translate3d(calc(-50% + 27px), calc(-50% + 14px), 0);
    transform: translate3d(calc(-50% + 27px), calc(-50% + 14px), 0);
  }
  .intro__title div:not(:last-of-type) {
    margin-right: 19px;
  }
  .intro__animation {
    left: calc(50% - 339px);
    top: calc(50% - 43px);
  }
  .intro__animation .intro__circle {
    top: 13px;
    transition: opacity 1s ease;
    opacity: 0;
  }
  .intro__animation .intro__circle--1 {
    display: none;
  }
  .intro__pin.js-animation-finished-2:after {
    width: 40px;
  }
  .intro__more {
    right: -45px;
  }
  .intro__more-text {
    left: auto;
    top: -10px;
    right: 0;
  }
  .slider3d {
    height: 663px;
  }
  .slider3d .bottomBtn {
    left: 52px;
    -webkit-transform: rotate(-90deg) translate3d(0, 0, 0);
    transform: rotate(-90deg) translate3d(0, 0, 0);
  }
  .slider3d .bottomBtn .bottomBtn__text {
    opacity: 1;
  }
  .slider3d__container {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    top: 91px;
    left: 0;
    padding-left: 38vw;
  }
  .slider3d__carousel .carousel-item {
    width: 258px;
    height: 435px;
  }
  .slider3d__carousel .carousel-item img {
    opacity: 1;
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
  }
  .slider3d__carousel .carousel-item img.view {
    width: 196px;
    height: 196px;
  }
  .slider3d__overlay {
    right: 273px;
    top: 43.5%;
    left: auto;
    opacity: 1;
  }
  .slider3d__overlay-circle--big {
    width: 351px;
    height: 351px;
  }
  .slider3d__overlay-circle--big:after {
    right: 64%;
  }
  .slider3d__overlay-circle--medium {
    width: 244px;
    height: 244px;
  }
  .slider3d__overlay-circle--medium:before {
    left: 15%;
  }
  .js-slide-3 .slider3d__overlay-circle--medium:before {
    left: 11%;
  }
  .slider3d__overlay-circle--medium:after {
    right: 0;
  }
  .js-slide-1 .slider3d__overlay-circle--medium:after {
    right: -0.5%;
  }
  .slider3d__text {
    -webkit-transform: none !important;
    -ms-transform: none !important;
    transform: none !important;
    width: 285px;
    top: 305px;
    left: 41px;
    opacity: 1;
  }
  .slider3d__text .slider3d__text-item {
    position: absolute;
    left: 0;
    top: 0;
    margin-top: 0;
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    opacity: 0;
  }
  .preview {
    height: 698px;
    background: white;
  }
  .preview .bottomBtn {
    left: 52px;
    -webkit-transform: rotate(-90deg) translate3d(0, 0, 0);
    transform: rotate(-90deg) translate3d(0, 0, 0);
  }
  .preview .bottomBtn .bottomBtn__text {
    opacity: 1;
  }
  .preview .textBlock {
    top: 96px;
  }
  .preview .textBlock .textBlock__item-big {
    margin-top: 29px;
  }
  .preview .textBlock .textBlock__item-big > span span {
    width: calc(100% + 10px);
  }
  .preview .textBlock .textBlock__item-big > span:after {
    right: -5px;
  }
  .preview .textBlock .textBlock__pagination {
    margin-top: 37px;
  }
  .preview__backdrop {
    -webkit-transform: translate3d(0, calc(-50% + 86px), 0) !important;
    transform: translate3d(0, calc(-50% + 86px), 0) !important;
  }
  .preview__image {
    display: none;
  }
  .preview__image.preview__image--1 {
    display: block;
    left: 61.3vw;
    top: -188px;
    opacity: 0.8 !important;
  }
  .preview__text {
    left: 0;
    top: -130px;
    opacity: 0;
    transition: opacity .8s ease !important;
    -webkit-transform: none !important;
    -ms-transform: none !important;
    transform: none !important;
  }
  .js-slide-1 .preview__text--1 {
    opacity: 1;
  }
  .js-slide-2 .preview__text--2 {
    opacity: 1;
  }
  .js-slide-3 .preview__text--3 {
    opacity: 1;
  }
  .js-slide-4 .preview__text--4 {
    opacity: 1;
  }
  .js-slide-5 .preview__text--5 {
    opacity: 1;
  }
  .preview__line {
    display: none;
  }
  .preview__line.preview__line--1 {
    display: block;
    left: 34.3vw;
    top: -153px;
    width: 166px !important;
    opacity: 1;
  }
  .preview__main {
    top: 38%;
    left: 45vw;
    width: 278px;
    height: 474px;
  }
  .slider {
    height: auto;
  }
  .slider .fixed-width-1280 {
    padding-bottom: 116px;
  }
  .slider .fixed-width-1280:before {
    width: 40px;
  }
  .slider .fixed-width-1280:after {
    width: 130px;
    background: linear-gradient(to left, black 0%, black 10%, transparent 100%);
  }
  .slider .textBlock__item-big {
    font-size: 41px;
    line-height: 56px;
  }
  .slider .textBlock__item-big > span {
    margin: 0 15px 0 0;
  }
  .slider .textBlock__item-big > span span {
    top: calc(100% - 1px);
  }
  .slider__inner {
    height: auto;
  }
  .slider__inner .slider__line,
  .slider__inner .slider__button,
  .slider__inner .slider__carousel {
    opacity: 1;
    transition: opacity 1s ease;
  }
  .slider .textBlock {
    position: relative;
    top: auto;
    left: auto;
    margin-left: 0;
    margin-top: 91px;
  }
  .slider__nextBtn {
    display: none;
  }
  .slider__carousel {
    position: relative;
    top: auto;
    left: auto;
    margin-left: -9px;
    margin-top: 105px;
  }
  .slider__carousel:before {
    left: -40px;
  }
  .slider__carousel .slick-carousel__item-title {
    margin-top: 90px;
    letter-spacing: 1px;
  }
  .slider__carousel .slick-carousel__item-line {
    margin-top: 40px;
  }
  .slider__carousel .slick-carousel__item-star {
    top: 10px;
  }
  .slider__button {
    position: relative;
    left: auto;
    bottom: auto;
    margin-top: 50px;
  }
  .canvas {
    height: auto;
  }
  .canvas .textBlock__item-big > span span {
    width: calc(100% + 20px);
    top: 100%;
    left: -10px;
    background-color: white;
  }
  .canvas .textBlock__item-big > span:before {
    left: -10px;
    top: 40px;
    background-color: white;
  }
  .canvas .textBlock__item-big > span:after {
    right: -10px;
    bottom: 0;
    background-color: white;
  }
  .canvas__inner {
    height: auto;
  }
  .canvas__inner .canvas__text,
  .canvas__inner .canvas__threejs {
    opacity: 1;
  }
  .canvas .textBlock {
    position: relative;
    margin-top: 97px;
    top: auto;
    left: auto;
  }
  .canvas__threejs {
    left: auto;
    right: 32vw;
  }
  .canvas__text {
    position: relative;
    right: auto;
    top: auto;
    margin-top: 90px;
    margin-left: calc(100% - 295px);
    margin-bottom: 135px;
    opacity: 1;
  }
  .join .bottomBtn__text {
    top: -14px;
  }
  .join__inner {
    left: 39px;
    top: auto;
    bottom: 130px;
  }
  .pageNumber {
    display: none;
  }
  .bottomBtn {
    right: -45px;
  }
  .bottomBtn__text {
    left: auto;
    top: -10px;
    right: 0;
  }
  .progressBar {
    display: none;
  }
}

@media (max-width: 767px) {
  .fixed-width-1280 {
    padding: 0 20px;
  }
  .h1 {
    font-size: 36px;
  }
  .h2 {
    font-size: 25px;
    line-height: 32px;
    letter-spacing: 0.5px;
  }
  .textBlock__pagination {
    display: none;
  }
  .header {
    height: 63px;
  }
  .header:after {
    width: calc(100% - 40px);
    top: 63px;
    left: 20px;
  }
  .header__logo {
    width: 67px;
    height: 31px;
    margin-left: 15px;
  }
  .header__links-link:not(:first-child) {
    margin-top: 28px;
  }
  .header__links {
    top: 202px;
  }
  .header__actions {
    top: 144px;
  }
  .header__login {
    position: absolute;
    top: -36px;
    left: 0;
    margin-top: -1px;
    width: 100%;
    text-align: center;
  }
  .header__burger {
    right: 20px;
    top: 8px;
  }
  .footer {
    height: auto;
  }
  .footer .fixed-width-1280 {
    padding-top: 49px;
    padding-bottom: 108px;
  }
  .footer__logo {
    position: relative;
    left: auto;
    top: auto;
    text-align: center;
  }
  .footer__social {
    position: relative;
    right: auto;
    top: auto;
    margin-top: 43px;
    margin-bottom: 31px;
  }
  .footer__center {
    position: relative;
    left: auto;
    top: auto;
    width: 100%;
  }
  .footer__links a {
    margin-bottom: 0;
    width: 100%;
    text-align: center;
  }
  .footer__links a:not(:first-child) {
    margin-top: 21px;
  }
  .footer__buttons {
    margin-top: 44px;
  }
  .footer__buttons .btn {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 199px;
    margin-left: auto;
    margin-right: auto;
  }
  .footer__buttons .btn:not(:first-child) {
    margin-top: 11px;
  }
  .footer__vintage {
    right: auto;
    left: 50%;
    top: auto;
    bottom: 38px;
    -webkit-transform: translate3d(-25%, 0, 0);
    transform: translate3d(-25%, 0, 0);
  }
  .intro {
    height: 473px;
  }
  .intro__title {
    width: 275px;
    -webkit-transform: translate3d(calc(-50% + 17px), calc(-50% + 11px), 0);
    transform: translate3d(calc(-50% + 17px), calc(-50% + 11px), 0);
  }
  .intro__title div:not(:last-of-type) {
    margin-right: 9px;
  }
  .intro__animation {
    left: calc(50% - 142px);
    top: calc(50% - 4px);
  }
  .intro__animation .intro__circle {
    top: -50px;
  }
  .intro__pin {
    left: -22px;
    top: -6px;
  }
  .intro__pin.js-animation-finished-2:after {
    width: 28px;
  }
  .intro__pin:before {
    display: none;
  }
  .intro__more {
    right: -65px;
    bottom: -33px;
  }
  .slider3d {
    height: 520px;
  }
  .slider3d .bottomBtn {
    display: none;
  }
  .slider3d .textBlock {
    position: relative;
    left: auto;
    top: auto;
    margin-top: 29px;
  }
  .slider3d .textBlock .textBlock__item-big > span:before {
    top: 23px;
    left: -9px;
  }
  .slider3d .textBlock .textBlock__item-big > span:after {
    bottom: -6px;
    right: -7px;
  }
  .slider3d .textBlock .textBlock__item-big > span span {
    top: calc(100% + 1px);
    width: calc(100% + 10px);
  }
  .slider3d__container {
    position: relative;
    top: 0;
    left: auto;
    height: auto;
    padding: 0;
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    z-index: 0;
  }
  .slider3d__carousel {
    height: 345px;
    width: 100%;
  }
  .slider3d__carousel:before {
    width: 45px;
  }
  .slider3d__carousel:after {
    width: 45px;
  }
  .slider3d__carousel .carousel-item {
    width: 125px;
    height: 212px;
    top: -42px;
  }
  .slider3d__carousel .carousel-item img.backdrop {
    -webkit-filter: none;
    filter: none;
    box-shadow: 0 0 25px 4px rgba(45, 37, 19, 0.13);
  }
  .slider3d__carousel .carousel-item img.view {
    display: none;
  }
  .slider3d__overlay {
    display: none;
  }
  .slider3d__text {
    width: 240px;
    font-size: 14px;
    line-height: 21px;
    left: 50%;
    top: 274px;
    margin-left: -120px;
  }
  .preview {
    height: auto;
    min-height: 600px;
  }
  .preview .bottomBtn {
    display: none;
  }
  .preview .textBlock {
    position: relative;
    left: auto;
    top: auto;
    margin-top: 29px;
  }
  .preview .textBlock .textBlock__item-big {
    margin-top: 11px;
  }
  .preview .textBlock .textBlock__item-big > span:before {
    top: 23px;
    left: -9px;
  }
  .preview .textBlock .textBlock__item-big > span:after {
    bottom: -6px;
    right: -7px;
  }
  .preview .textBlock .textBlock__item-big > span span {
    top: calc(100% + 1px);
    width: calc(100% + 10px);
  }
  .preview__images {
    display: none;
  }
  .preview__texts {
    width: 240px;
    left: 50%;
    top: 49px;
    margin-left: -120px;
  }
  .preview__lines {
    display: none;
  }
  .preview__text {
    font-size: 14px;
    line-height: 21px;
    top: 0;
    left: 0;
    width: 100%;
  }
  .preview__main {
    position: relative;
    top: auto;
    left: auto;
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
    height: 345px;
    width: 100%;
    box-shadow: none;
    background: transparent;
  }
  .preview__main:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 10px;
    top: 0;
    left: 0;
    z-index: 2;
    background: linear-gradient(to right, white 0%, white 35%, rgba(255, 255, 255, 0) 100%);
  }
  .preview__main:after {
    content: '';
    position: absolute;
    height: 100%;
    width: 10px;
    top: 0;
    right: 0;
    z-index: 2;
    background: linear-gradient(to left, white 0%, white 35%, rgba(255, 255, 255, 0) 100%);
  }
  .preview__main .carousel-item {
    width: 140px;
    height: 238px;
    top: -9px;
    box-shadow: 0 0 25px 4px rgba(45, 37, 19, 0.13);
  }
  .preview__main .carousel-item.active {
    opacity: 1;
  }
  .slider .fixed-width-1280 {
    padding-bottom: 43px;
  }
  .slider .fixed-width-1280:before {
    display: none;
  }
  .slider .fixed-width-1280:after {
    background: linear-gradient(to left, black 0%, black 5%, transparent 100%);
    width: 70px;
  }
  .slider .textBlock__item-big {
    color: white;
    font-family: "RobotoLight", sans-serif;
    font-size: 25px;
    line-height: 36px;
    margin-top: 17px;
  }
  .slider .textBlock__item-big > span {
    margin: 0 6px 0 0;
  }
  .slider .textBlock__item-big > span span, .slider .textBlock__item-big > span:before, .slider .textBlock__item-big > span:after {
    display: none;
  }
  .slider .textBlock {
    margin-top: 27px;
  }
  .slider__carousel {
    width: 100%;
    margin-left: -3px;
    margin-top: 33px;
  }
  .slider__carousel:before {
    left: -20px;
    top: 17px;
  }
  .slider__carousel .slick-carousel__item-title {
    margin-top: 63px;
    letter-spacing: 0;
  }
  .slider__carousel .slick-carousel__item-line {
    margin-top: 35px;
    margin-bottom: 35px;
    margin-left: 4px;
  }
  .slider__carousel .slick-carousel__item-text {
    font-size: 14px;
    line-height: 21px;
  }
  .slider__carousel .slick-carousel__item-text {
    -webkit-transform: translate3d(-5px, 0, 0);
    transform: translate3d(-5px, 0, 0);
    width: 280px;
  }
  .slider__button {
    margin-top: 58px;
  }
  .canvas .textBlock__item-big > span {
    margin-left: 11px;
    margin-right: 0;
  }
  .canvas .textBlock__item-big > span:before {
    top: 22px;
  }
  .canvas .textBlock__item-big {
    margin-top: 19px;
    letter-spacing: 0;
    line-height: 36px;
  }
  .canvas .textBlock {
    margin-top: 27px;
  }
  .canvas__threejs {
    display: none;
  }
  .canvas__text {
    margin-top: 26px;
    margin-left: 0;
    margin-bottom: 40px;
    width: 100%;
    padding-left: 0;
  }
  .canvas__text-item:before {
    display: none;
  }
  .canvas__text-item:not(:first-child) {
    margin-top: 17px;
  }
  .canvas__text-item.js-active {
    -webkit-transform: none;
    -ms-transform: none;
    transform: none;
  }
  .canvas__text-item {
    font-size: 14px;
    line-height: 21px;
  }
  .join {
    height: auto;
  }
  .join .bottomBtn {
    bottom: -61px;
  }
  .join .fixed-width-1280 {
    padding-bottom: 96px;
    padding-top: 50px;
    overflow: hidden;
  }
  .join__inner {
    position: relative;
    left: auto;
    bottom: auto;
  }
  .join__title {
    font-size: 25px;
    margin-top: 5px;
  }
  .join__buttons {
    margin-top: 25px;
  }
  .join__buttons .btn {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    width: 100%;
    margin-left: 0;
  }
  .join__buttons .btn:not(:first-child) {
    margin-top: 16px;
  }
  .bottomBtn {
    right: -65px;
    bottom: -33px;
  }
}

@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .ps {
    overflow: auto !important;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
